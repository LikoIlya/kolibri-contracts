{ parameter
    (or (unit %default)
        (or (contract %getXtzUsdRate nat)
            (or (address %setGovernorContract) (nat %setMaxDataDelaySec)))) ;
  storage
    (pair (address %oracleProxyContractAddress)
          (nat %maxDataDelaySec)
          (address %governorContractAddress)) ;
  code { PUSH string "15" ;
         PUSH timestamp 0 ;
         NIL operation ;
         DIG 3 ;
         UNPAIR ;
         IF_LEFT
           { DIG 3 ;
             DROP 2 ;
             DIG 2 ;
             PUSH mutez 0 ;
             AMOUNT ;
             COMPARE ;
             EQ ;
             IF { DROP } { FAILWITH } ;
             SWAP }
           { IF_LEFT
               { DIG 2 ;
                 DROP ;
                 DIG 3 ;
                 PUSH mutez 0 ;
                 AMOUNT ;
                 COMPARE ;
                 EQ ;
                 IF { DROP } { FAILWITH } ;
                 DUP 2 ;
                 CAR ;
                 PUSH string "XTZUSDT" ;
                 VIEW "get_price_with_timestamp"
                      (pair (nat %price) (timestamp %last_update_timestamp)) ;
                 PUSH string "3" ;
                 SWAP ;
                 IF_NONE { FAILWITH } { SWAP ; DROP } ;
                 PUSH string "17" ;
                 DUP 4 ;
                 GET 3 ;
                 INT ;
                 NOW ;
                 SUB ;
                 PUSH int 1000 ;
                 DUP 7 ;
                 DUP 5 ;
                 CDR ;
                 SUB ;
                 EDIV ;
                 IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                 CAR ;
                 DIG 6 ;
                 ADD ;
                 COMPARE ;
                 GE ;
                 IF { DROP } { FAILWITH } ;
                 PUSH nat 1000000000000 ;
                 SWAP ;
                 CAR ;
                 MUL ;
                 DIG 2 ;
                 NIL operation ;
                 DIG 3 ;
                 PUSH mutez 0 ;
                 DIG 4 ;
                 TRANSFER_TOKENS ;
                 CONS }
               { DIG 3 ;
                 DROP ;
                 IF_LEFT
                   { DIG 3 ;
                     PUSH mutez 0 ;
                     AMOUNT ;
                     COMPARE ;
                     EQ ;
                     IF { DROP } { FAILWITH } ;
                     PUSH string "4" ;
                     DUP 3 ;
                     GET 4 ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF { DROP } { FAILWITH } ;
                     UPDATE 4 }
                   { DIG 3 ;
                     PUSH mutez 0 ;
                     AMOUNT ;
                     COMPARE ;
                     EQ ;
                     IF { DROP } { FAILWITH } ;
                     PUSH string "4" ;
                     DUP 3 ;
                     GET 4 ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF { DROP } { FAILWITH } ;
                     UPDATE 3 } ;
                 SWAP } } ;
         PAIR } }

